import { useState, useEffect } from 'react';

export const useJotaData = (enablePolling = false, pollingInterval = 30000) => {
  const [landingData, setLandingData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [retryCount, setRetryCount] = useState(0);

  const fetchJotaData = async (attempt = 1) => {
    try {
      if (attempt === 1) setError(null);
      
      console.log(`üîÑ Tentativa ${attempt} - Carregando dados Jota Solu√ß√µes...`);
      
      // URL da API configurada para seu servidor
      const apiUrl = import.meta.env.VITE_API_URL || 'http://212.85.10.205:3000';
      
      // Endpoint espec√≠fico do Jota Solu√ß√µes
      const response = await fetch(`${apiUrl}/api/content/landing/jota-solucoes`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
        signal: AbortSignal.timeout(15000)
      });

      if (!response.ok) {
        throw new Error(`Erro HTTP: ${response.status}`);
      }

      const result = await response.json();
      console.log('‚úÖ Dados Jota Solu√ß√µes carregados:', result);
      
      // Extrair dados da resposta
      let data = null;
      if (result.data) {
        data = result.data;
      } else if (result.landing) {
        data = result.landing;
      } else {
        data = result;
      }
      
      setLandingData(data);
      setRetryCount(0);
      
    } catch (err) {
      console.error(`‚ùå Erro na tentativa ${attempt}:`, err);
      
      // Retry logic - at√© 3 tentativas
      if (attempt < 3) {
        console.log(`üîÑ Tentando novamente em 3 segundos... (${attempt}/3)`);
        setTimeout(() => {
          fetchJotaData(attempt + 1);
        }, 3000);
        return;
      }
      
      console.log('‚ö†Ô∏è Usando dados padr√£o Jota Solu√ß√µes');
      setError(`Erro ap√≥s ${attempt} tentativas: ${err.message}`);
      setRetryCount(attempt);
      
      // Dados de fallback espec√≠ficos para Jota Solu√ß√µes
      setLandingData({
        title: 'Jota Solu√ß√µes',
        subtitle: 'Descubra como transformar a sa√∫de financeira da sua empresa!',
        cta: 'Quero meu diagn√≥stico gratuito',
        description: 'Receba um diagn√≥stico financeiro gratuito e tenha uma reuni√£o estrat√©gica com o CEO da Jota Solu√ß√µes.',
        blocos: {
          heroi: {
            destaque: 'Descubra como transformar a sa√∫de financeira da sua empresa!',
            cta: 'Quero meu diagn√≥stico gratuito'
          },
          dores: {
            itens: [
              'N√£o sabe se o neg√≥cio est√° dando lucro',
              'Decis√µes sem base nos n√∫meros',
              'Falta de clareza no planejamento',
              'Inseguran√ßa para crescer'
            ]
          },
          solucoes: {
            itens: [
              'Clareza total dos n√∫meros',
              'Metas e resultados vis√≠veis',
              'Decis√µes estrat√©gicas',
              'Apoio especializado'
            ]
          },
          sobre: {
            texto: 'Somos especialistas em BPO Financeiro, ajudando pequenas e m√©dias empresas a organizarem suas finan√ßas e tomarem decis√µes mais inteligentes baseadas em dados reais.',
            dados: ['500+ Empresas Atendidas', '95% Satisfa√ß√£o', '5+ Anos de Experi√™ncia'],
            ceo: {
              nome: 'Jo√£o Silva',
              cargo: 'CEO & Fundador',
              frase: 'Minha paix√£o √© ajudar empres√°rios a alcan√ßarem seus objetivos atrav√©s de uma gest√£o financeira eficiente e estrat√©gica.'
            }
          },
          depoimentos: {
            clientes: [
              {
                nome: 'Maria Santos',
                empresa: 'Boutique Elegance',
                texto: 'Ap√≥s o diagn√≥stico da Jota Solu√ß√µes, consegui ter clareza total dos meus n√∫meros. Meu faturamento aumentou 40% em 6 meses!'
              },
              {
                nome: 'Carlos Oliveira',
                empresa: 'TechStart Solutions',
                texto: 'O BPO Financeiro transformou minha empresa. Agora tomo decis√µes baseadas em dados, n√£o no achismo. Recomendo!'
              },
              {
                nome: 'Ana Costa',
                empresa: 'Padaria Artesanal',
                texto: 'Finalmente entendo se minha empresa est√° dando lucro. O suporte √© excepcional e os resultados s√£o vis√≠veis!'
              }
            ]
          }
        },
        status: 'fallback'
      });
    } finally {
      setLoading(false);
    }
  };

  // Effect para carregamento inicial
  useEffect(() => {
    fetchJotaData();
  }, []);

  // Effect para polling (se habilitado)
  useEffect(() => {
    if (!enablePolling) return;

    const interval = setInterval(() => {
      console.log('üîÑ Polling autom√°tico - Atualizando dados Jota Solu√ß√µes...');
      fetchJotaData();
    }, pollingInterval);

    return () => clearInterval(interval);
  }, [enablePolling, pollingInterval]);

  // Fun√ß√£o para refetch manual
  const refetch = () => {
    console.log('üîÑ Refetch manual Jota Solu√ß√µes');
    setLoading(true);
    setError(null);
    setRetryCount(0);
    fetchJotaData();
  };

  // Status da conex√£o
  const connectionStatus = {
    isConnected: !!landingData && !error,
    hasError: !!error,
    retryCount,
    isUsingFallback: landingData?.status === 'fallback',
    apiUrl: import.meta.env.VITE_API_URL || 'http://212.85.10.205:3000'
  };

  return {
    landingData,
    loading,
    error,
    refetch,
    connectionStatus
  };
};

export default useJotaData;
